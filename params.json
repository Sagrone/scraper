{"name":"Sagrone Scraper","tagline":"Simple library to scrap web pages.","body":"# Sagrone scraper\r\n\r\nSimple library to scrap web pages. Bellow you will find information on [how to use it](#basic-usage).\r\n\r\n## Table of Contents\r\n\r\n- [Installation](#installation)\r\n- [Basic Usage](#basic-usage)\r\n- [Modules](#modules)\r\n  + [`SagroneScraper::Agent`](#sagronescraperagent)\r\n  + [`SagroneScraper::Base`](#sagronescraperbase)\r\n    * [Create a scraper class](#create-a-scraper-class)\r\n    * [Instantiate the scraper](#instantiate-the-scraper)\r\n    * [Scrape the page](#scrape-the-page)\r\n    * [Extract the data](#extract-the-data)\r\n  + [`SagroneScraper::Collection`](#sagronescrapercollection)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    $ gem 'sagrone_scraper'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install sagrone_scraper\r\n\r\n## Basic Usage\r\n\r\nIn order to scrap a web page you need to [create a new scraper class](#create-a-scraper-class) by inheriting from `SagroneScraper::Base` and [instantiate it with a `url` or `page`](#instantiate-the-scraper). Then you can [scrape the page](#scrape-the-page) and [extract the data](#extract-the-data). More informations at [`SagroneScraper::Base`](#sagronescraperbase) module.\r\n\r\n## Modules\r\n\r\n### `SagroneScraper::Agent`\r\n\r\nThe agent is responsible for obtaining a page, `Mechanize::Page`, from a URL. Here is how you can create an `agent`:\r\n\r\n```ruby\r\nrequire 'sagrone_scraper'\r\n\r\nagent = SagroneScraper::Agent.new(url: 'https://twitter.com/Milano_JS')\r\nagent.page\r\n# => Mechanize::Page\r\n\r\nagent.page.at('.ProfileHeaderCard-bio').text\r\n# => \"Javascript User Group Milano #milanojs\"\r\n```\r\n\r\n### `SagroneScraper::Base`\r\n\r\nHere we define a `TwitterScraper`, by inheriting from `SagroneScraper::Base` class.\r\n\r\nThe _scraper_ is responsible for extracting structured data from a _page_ or a _url_. The _page_ can be obtained by the [_agent_](#sagronescraperagent).\r\n\r\n_Public_ instance methods will be used to extract data, whereas _private_ instance methods will be ignored (seen as helper methods). Most importantly `self.can_scrape?(url)` class method ensures that only a known subset of pages can be scraped for data.\r\n\r\n#### Create a scraper class\r\n\r\n```ruby\r\nrequire 'sagrone_scraper'\r\n\r\nclass TwitterScraper < SagroneScraper::Base\r\n  TWITTER_PROFILE_URL = /^https?:\\/\\/twitter.com\\/(\\w)+\\/?$/i\r\n\r\n  def self.can_scrape?(url)\r\n    url.match(TWITTER_PROFILE_URL) ? true : false\r\n  end\r\n\r\n  # Public instance methods are used for data extraction.\r\n\r\n  def bio\r\n    text_at('.ProfileHeaderCard-bio')\r\n  end\r\n\r\n  def location\r\n    text_at('.ProfileHeaderCard-locationText')\r\n  end\r\n\r\n  private\r\n\r\n  # Private instance methods are not used for data extraction.\r\n\r\n  def text_at(selector)\r\n    page.at(selector).text if page.at(selector)\r\n  end\r\nend\r\n```\r\n\r\n#### Instantiate the scraper\r\n\r\n```ruby\r\n# Instantiate the scraper with a \"url\".\r\nscraper = TwitterScraper.new(url: 'https://twitter.com/Milano_JS')\r\n\r\n# Instantiate the scraper with a \"page\" (Mechanize::Page).\r\nagent = SagroneScraper::Agent.new(url: 'https://twitter.com/Milano_JS')\r\nscraper = TwitterScraper.new(page: agent.page)\r\n```\r\n\r\n#### Scrape the page\r\n\r\n```ruby\r\nscraper.scrape_page!\r\n```\r\n\r\n#### Extract the data\r\n\r\n```ruby\r\nscraper.attributes\r\n# => {bio: \"Javascript User Group Milano #milanojs\", location: \"Milan, Italy\"}\r\n```\r\n\r\n### `SagroneScraper::Collection`\r\n\r\nThis is the simplest way to scrape a web page:\r\n\r\n```ruby\r\nrequire 'sagrone_scraper'\r\n\r\n# 1) Define a scraper. For example, the TwitterScraper above.\r\n\r\n# 2) New created scrapers will be registered.\r\nSagroneScraper.Collection::registered_scrapers\r\n# => ['TwitterScraper']\r\n\r\n# 3) Here we use the collection to scrape data at a URL.\r\nSagroneScraper::Collection.scrape(url: 'https://twitter.com/Milano_JS')\r\n# => {bio: \"Javascript User Group Milano #milanojs\", location: \"Milan, Italy\"}","google":"UA-55659115-3","note":"Don't delete this file! It's used internally to help with page regeneration."}